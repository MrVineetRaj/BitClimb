// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum ProblemDifficulty {
  EASY
  MEDIUM
  HARD
}

model User {
  id                           String    @id @default(uuid())
  name                         String?
  email                        String    @unique
  avatar                       String?
  role                         UserRole  @default(USER)
  password                     String
  createdAt                    DateTime  @default(now())
  updatedAt                    DateTime  @updatedAt
  isEmailVerified              Boolean   @default(false)
  emailVerificationToken       String?
  emailVerificationTokenExpiry DateTime?
  forgotPasswordToken          String?
  forgotPasswordTokenExpiry    DateTime?

  problems     Problem[]
}

model Problem {
  id                String            @id @default(uuid())
  title             String
  description       String
  difficulty        ProblemDifficulty
  tags              String[]
  userId            String
  examples          Json
  constraints       String
  hints             String?
  editorial         String?
  testCases         Json
  codeSnippets      Json
  // serverSideCodeSnippet Json
  referenceSolution Json
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

