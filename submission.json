[
  {
    "detailedResults": [
      {
        "input": "1 2 0 1",
        "expected_output": "3",
        "output": "3",
        "status": "Accepted",
        "time": "0.005",
        "memory": 1452,
        "compile_output": ""
      },
      {
        "input": "9 1 4 7 3 -1 0 5 8 -1 6",
        "expected_output": "7",
        "output": "7",
        "status": "Accepted",
        "time": "0.006",
        "memory": 1476,
        "compile_output": ""
      },
      {
        "input": "10",
        "expected_output": "1",
        "output": "1",
        "status": "Accepted",
        "time": "0.005",
        "memory": 1312,
        "compile_output": ""
      }
    ]
  },
  {
    "statusCode": 200,
    "message": "Submissions fetched successfully",
    "data": [
      {
        "id": "d479b22f-0bc3-438a-96c5-7ec7a8132437",
        "userId": "deff8122-5346-441e-bf43-f0ed74a4f139",
        "problemId": "17dd90d1-bc6e-4871-b882-be50d728f563",
        "sourceCode": "#include <iostream>\n#include <vector>\n#include <unordered_set>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nint longestConsecutive(vector<int>& nums) {\n    if (nums.empty()) return 0;\n    unordered_set<int> st(nums.begin(), nums.end());\n    int longest = 1;\n    for (int num : st) {\n        if (st.find(num - 1) == st.end()) {\n            int cnt = 1;\n            int x = num;\n            while (st.find(x + 1) != st.end()) {\n                x++;\n                cnt++;\n            }\n            longest = max(longest, cnt);\n        }\n    }\n    return longest;\n}\n\nint main() {\n    string line;\n    getline(cin, line);\n\n    vector<int> nums;\n    if (!line.empty()) {\n        stringstream ss(line);\n        int x;\n        while (ss >> x) nums.push_back(x);\n    }\n\n    cout << longestConsecutive(nums) << endl;\n    return 0;\n}",
        "language": "CPP",
        "stdin": null,
        "stdout": null,
        "stdError": null,
        "compileOutput": null,
        "status": "ACCEPTED",
        "memory": "4240 KB",
        "time": "0.016 s",
        "createdAt": "2025-05-28T19:36:56.899Z",
        "updatedAt": "2025-05-28T19:36:56.899Z"
      }
    ],
    "success": true
  }
]
